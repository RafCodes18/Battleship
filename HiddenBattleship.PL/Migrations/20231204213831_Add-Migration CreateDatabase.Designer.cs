// <auto-generated />
using System;
using HiddenBattleship.PL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HiddenBattleship.PL.Migrations
{
    [DbContext(typeof(HiddenBattleshipEntities))]
    [Migration("20231204213831_Add-Migration CreateDatabase")]
    partial class AddMigrationCreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HiddenBattleship.PL.Entities.tblChatHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ChatHistoryId")
                        .HasColumnType("int");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Message")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<Guid>("Receiver")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Sender")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("Timestamp")
                        .HasColumnType("time");

                    b.HasKey("Id")
                        .HasName("PK__tblChatH__3214EC07CBD56E82");

                    b.HasIndex("GameId");

                    b.HasIndex("Receiver");

                    b.ToTable("tblChatHistory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("cbaf1ffe-d1f7-4312-a4ab-83049be5dad9"),
                            ChatHistoryId = 1,
                            GameId = new Guid("d0683cf5-b054-4f48-8e65-c8c03d7252f9"),
                            Message = "1v1 me",
                            Receiver = new Guid("2ec4ade3-309b-423b-a6f6-a60f420b8f7a"),
                            Sender = new Guid("202d9bf5-a700-4085-8443-9a53990ef8b2"),
                            Timestamp = new TimeSpan(0, 4, 10, 55, 0)
                        },
                        new
                        {
                            Id = new Guid("14c6e599-dc81-4d93-a9b0-2ac22908eee6"),
                            ChatHistoryId = 1,
                            GameId = new Guid("d0683cf5-b054-4f48-8e65-c8c03d7252f9"),
                            Message = "You missed, LOL",
                            Receiver = new Guid("202d9bf5-a700-4085-8443-9a53990ef8b2"),
                            Sender = new Guid("2ec4ade3-309b-423b-a6f6-a60f420b8f7a"),
                            Timestamp = new TimeSpan(0, 5, 1, 20, 0)
                        },
                        new
                        {
                            Id = new Guid("c113166c-8b56-475e-9e3c-8892cb218a38"),
                            ChatHistoryId = 1,
                            GameId = new Guid("d0683cf5-b054-4f48-8e65-c8c03d7252f9"),
                            Message = "Follow my twitch stream?",
                            Receiver = new Guid("2ec4ade3-309b-423b-a6f6-a60f420b8f7a"),
                            Sender = new Guid("202d9bf5-a700-4085-8443-9a53990ef8b2"),
                            Timestamp = new TimeSpan(0, 11, 51, 14, 0)
                        },
                        new
                        {
                            Id = new Guid("59435841-2e36-4144-8dfc-1b2422872126"),
                            ChatHistoryId = 1,
                            GameId = new Guid("d0683cf5-b054-4f48-8e65-c8c03d7252f9"),
                            Message = "You're hacking, i'm telling my dad he works at Jagex!!11!",
                            Receiver = new Guid("202d9bf5-a700-4085-8443-9a53990ef8b2"),
                            Sender = new Guid("2ec4ade3-309b-423b-a6f6-a60f420b8f7a"),
                            Timestamp = new TimeSpan(0, 1, 28, 19, 0)
                        },
                        new
                        {
                            Id = new Guid("e3da31a6-b34c-4c61-ba30-cf9b6fcb6952"),
                            ChatHistoryId = 2,
                            GameId = new Guid("33d64902-2d8d-492e-9136-b083abb978f6"),
                            Message = "1v1 me",
                            Receiver = new Guid("2ec4ade3-309b-423b-a6f6-a60f420b8f7a"),
                            Sender = new Guid("7649c192-1e63-4b9f-90ef-23f66679a11c"),
                            Timestamp = new TimeSpan(0, 4, 10, 55, 0)
                        },
                        new
                        {
                            Id = new Guid("67fd82f5-6f06-4dd6-bf13-59ade25d31d3"),
                            ChatHistoryId = 2,
                            GameId = new Guid("33d64902-2d8d-492e-9136-b083abb978f6"),
                            Message = "You missed, LOL",
                            Receiver = new Guid("7649c192-1e63-4b9f-90ef-23f66679a11c"),
                            Sender = new Guid("2ec4ade3-309b-423b-a6f6-a60f420b8f7a"),
                            Timestamp = new TimeSpan(0, 5, 1, 20, 0)
                        },
                        new
                        {
                            Id = new Guid("2a84235b-e5d8-4d1c-88de-fac8982b26ff"),
                            ChatHistoryId = 2,
                            GameId = new Guid("33d64902-2d8d-492e-9136-b083abb978f6"),
                            Message = "Follow my twitch stream?",
                            Receiver = new Guid("2ec4ade3-309b-423b-a6f6-a60f420b8f7a"),
                            Sender = new Guid("7649c192-1e63-4b9f-90ef-23f66679a11c"),
                            Timestamp = new TimeSpan(0, 11, 51, 14, 0)
                        },
                        new
                        {
                            Id = new Guid("b9be3b0b-8045-4c64-a2ec-5c337d3170e4"),
                            ChatHistoryId = 2,
                            GameId = new Guid("33d64902-2d8d-492e-9136-b083abb978f6"),
                            Message = "You're hacking, i'm telling my dad he works at Jagex!!11!",
                            Receiver = new Guid("7649c192-1e63-4b9f-90ef-23f66679a11c"),
                            Sender = new Guid("2ec4ade3-309b-423b-a6f6-a60f420b8f7a"),
                            Timestamp = new TimeSpan(0, 1, 28, 19, 0)
                        },
                        new
                        {
                            Id = new Guid("9a94b4c9-fa7f-469f-b919-4603ee7f7b41"),
                            ChatHistoryId = 3,
                            GameId = new Guid("a3b8ac6e-abe6-4b36-acc9-1d33fdb6e55f"),
                            Message = "1v1 me",
                            Receiver = new Guid("a6df7b6b-8e07-4cbb-aa82-500c2cb3d897"),
                            Sender = new Guid("a6df7b6b-8e07-4cbb-aa82-500c2cb3d897"),
                            Timestamp = new TimeSpan(0, 4, 10, 55, 0)
                        },
                        new
                        {
                            Id = new Guid("c59f3f49-d46a-4b3b-a6ed-6dda95b2760c"),
                            ChatHistoryId = 3,
                            GameId = new Guid("a3b8ac6e-abe6-4b36-acc9-1d33fdb6e55f"),
                            Message = "You missed, LOL",
                            Receiver = new Guid("2ec4ade3-309b-423b-a6f6-a60f420b8f7a"),
                            Sender = new Guid("2ec4ade3-309b-423b-a6f6-a60f420b8f7a"),
                            Timestamp = new TimeSpan(0, 5, 1, 20, 0)
                        },
                        new
                        {
                            Id = new Guid("90e20966-b0d0-4d61-8517-32ba7510df0e"),
                            ChatHistoryId = 3,
                            GameId = new Guid("a3b8ac6e-abe6-4b36-acc9-1d33fdb6e55f"),
                            Message = "Follow my twitch stream?",
                            Receiver = new Guid("a6df7b6b-8e07-4cbb-aa82-500c2cb3d897"),
                            Sender = new Guid("a6df7b6b-8e07-4cbb-aa82-500c2cb3d897"),
                            Timestamp = new TimeSpan(0, 11, 51, 14, 0)
                        },
                        new
                        {
                            Id = new Guid("1ae99457-c26c-487f-a5df-d73bd6772951"),
                            ChatHistoryId = 3,
                            GameId = new Guid("a3b8ac6e-abe6-4b36-acc9-1d33fdb6e55f"),
                            Message = "You're hacking, i'm telling my dad he works at Jagex!!11!",
                            Receiver = new Guid("2ec4ade3-309b-423b-a6f6-a60f420b8f7a"),
                            Sender = new Guid("2ec4ade3-309b-423b-a6f6-a60f420b8f7a"),
                            Timestamp = new TimeSpan(0, 1, 28, 19, 0)
                        });
                });

            modelBuilder.Entity("HiddenBattleship.PL.Entities.tblGame", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan?>("EndTime")
                        .IsRequired()
                        .HasColumnType("time");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<bool>("IsOver")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LoserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Player1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Player2")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<Guid?>("WinnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("tblChatHistoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__tblGame__3214EC07DA24F9C4");

                    b.HasIndex("LoserId");

                    b.HasIndex("tblChatHistoryId");

                    b.ToTable("tblGame", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d0683cf5-b054-4f48-8e65-c8c03d7252f9"),
                            EndTime = new TimeSpan(0, 1, 20, 30, 0),
                            GameId = 0,
                            IsOver = true,
                            LoserId = new Guid("202d9bf5-a700-4085-8443-9a53990ef8b2"),
                            Player1 = new Guid("a6df7b6b-8e07-4cbb-aa82-500c2cb3d897"),
                            Player2 = new Guid("202d9bf5-a700-4085-8443-9a53990ef8b2"),
                            StartTime = new TimeSpan(0, 1, 20, 30, 0),
                            WinnerId = new Guid("a6df7b6b-8e07-4cbb-aa82-500c2cb3d897")
                        },
                        new
                        {
                            Id = new Guid("33d64902-2d8d-492e-9136-b083abb978f6"),
                            EndTime = new TimeSpan(0, 1, 20, 30, 0),
                            GameId = 1,
                            IsOver = false,
                            LoserId = new Guid("202d9bf5-a700-4085-8443-9a53990ef8b2"),
                            Player1 = new Guid("a6df7b6b-8e07-4cbb-aa82-500c2cb3d897"),
                            Player2 = new Guid("202d9bf5-a700-4085-8443-9a53990ef8b2"),
                            StartTime = new TimeSpan(0, 1, 20, 30, 0),
                            WinnerId = new Guid("a6df7b6b-8e07-4cbb-aa82-500c2cb3d897")
                        },
                        new
                        {
                            Id = new Guid("a3b8ac6e-abe6-4b36-acc9-1d33fdb6e55f"),
                            EndTime = new TimeSpan(0, 1, 20, 30, 0),
                            GameId = 2,
                            IsOver = false,
                            LoserId = new Guid("202d9bf5-a700-4085-8443-9a53990ef8b2"),
                            Player1 = new Guid("a6df7b6b-8e07-4cbb-aa82-500c2cb3d897"),
                            Player2 = new Guid("202d9bf5-a700-4085-8443-9a53990ef8b2"),
                            StartTime = new TimeSpan(0, 1, 20, 30, 0),
                            WinnerId = new Guid("a6df7b6b-8e07-4cbb-aa82-500c2cb3d897")
                        },
                        new
                        {
                            Id = new Guid("aa1a9afe-4989-4c76-83ac-94e15985ec95"),
                            EndTime = new TimeSpan(0, 1, 20, 30, 0),
                            GameId = 3,
                            IsOver = false,
                            LoserId = new Guid("202d9bf5-a700-4085-8443-9a53990ef8b2"),
                            Player1 = new Guid("a6df7b6b-8e07-4cbb-aa82-500c2cb3d897"),
                            Player2 = new Guid("202d9bf5-a700-4085-8443-9a53990ef8b2"),
                            StartTime = new TimeSpan(0, 1, 20, 30, 0),
                            WinnerId = new Guid("a6df7b6b-8e07-4cbb-aa82-500c2cb3d897")
                        });
                });

            modelBuilder.Entity("HiddenBattleship.PL.Entities.tblGameMove", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GameMoveId")
                        .HasColumnType("int");

                    b.Property<bool>("IsHit")
                        .HasColumnType("bit");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TargetCoordinates")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<TimeSpan>("TimeStamp")
                        .HasColumnType("time");

                    b.HasKey("Id")
                        .HasName("PK__tblGameM__3214EC07B921B560");

                    b.HasIndex("GameId");

                    b.HasIndex("PlayerId");

                    b.ToTable("tblGameMove", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9a295282-a519-43ab-9440-88dddfd64d64"),
                            GameId = new Guid("d0683cf5-b054-4f48-8e65-c8c03d7252f9"),
                            GameMoveId = 0,
                            IsHit = true,
                            PlayerId = new Guid("a6df7b6b-8e07-4cbb-aa82-500c2cb3d897"),
                            TargetCoordinates = "A5",
                            TimeStamp = new TimeSpan(0, 1, 20, 30, 0)
                        },
                        new
                        {
                            Id = new Guid("a25fda1b-97b1-46a3-8dc8-ca1a07214360"),
                            GameId = new Guid("d0683cf5-b054-4f48-8e65-c8c03d7252f9"),
                            GameMoveId = 1,
                            IsHit = true,
                            PlayerId = new Guid("a6df7b6b-8e07-4cbb-aa82-500c2cb3d897"),
                            TargetCoordinates = "A5",
                            TimeStamp = new TimeSpan(0, 1, 20, 30, 0)
                        },
                        new
                        {
                            Id = new Guid("047818f6-9e29-4101-be05-b58fa107fbd9"),
                            GameId = new Guid("d0683cf5-b054-4f48-8e65-c8c03d7252f9"),
                            GameMoveId = 2,
                            IsHit = true,
                            PlayerId = new Guid("a6df7b6b-8e07-4cbb-aa82-500c2cb3d897"),
                            TargetCoordinates = "A5",
                            TimeStamp = new TimeSpan(0, 1, 20, 30, 0)
                        },
                        new
                        {
                            Id = new Guid("3d703040-44fc-4e60-a831-d25438fd395c"),
                            GameId = new Guid("d0683cf5-b054-4f48-8e65-c8c03d7252f9"),
                            GameMoveId = 3,
                            IsHit = true,
                            PlayerId = new Guid("a6df7b6b-8e07-4cbb-aa82-500c2cb3d897"),
                            TargetCoordinates = "A5",
                            TimeStamp = new TimeSpan(0, 1, 20, 30, 0)
                        });
                });

            modelBuilder.Entity("HiddenBattleship.PL.Entities.tblPlayer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id")
                        .HasName("PK__tblPlaye__3214EC0786DA1BDC");

                    b.ToTable("tblPlayer", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a6df7b6b-8e07-4cbb-aa82-500c2cb3d897"),
                            Email = "123@gmail.com",
                            Password = "W6ph5Mm5Pz8GgiULbPgzG37mj9g=",
                            UserName = "Sh1PD3STR0Y3R"
                        },
                        new
                        {
                            Id = new Guid("202d9bf5-a700-4085-8443-9a53990ef8b2"),
                            Email = "456@gmail.com",
                            Password = "YRfkWrV/hmDYZqIcpenSwx28GUU=",
                            UserName = "Timmy"
                        },
                        new
                        {
                            Id = new Guid("2ec4ade3-309b-423b-a6f6-a60f420b8f7a"),
                            Email = "789@yahoo.com",
                            Password = "7DUut/wAuxmp4mKiKKNr9eEUeG0=",
                            UserName = "LoveMyCats1155"
                        },
                        new
                        {
                            Id = new Guid("7649c192-1e63-4b9f-90ef-23f66679a11c"),
                            Email = "aaabbb@amazon.com",
                            Password = "3oUt/zAHVa53n7yyDzprXz4Rxs8=",
                            UserName = "Skeert"
                        },
                        new
                        {
                            Id = new Guid("062a0160-ed33-478a-9bad-abc5e3b9ab13"),
                            Email = "uTest@yahoo.com",
                            Password = "qUqP5cyxm6YcTAhz05Hph5gvu9M=",
                            UserName = "uTest"
                        });
                });

            modelBuilder.Entity("HiddenBattleship.PL.Entities.tblShip", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ShipType")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_tblShip");

                    b.ToTable("tblShip", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("bde3bbe9-0e70-474f-a800-226bf4ae6e2c"),
                            ShipType = 0,
                            Size = 4
                        },
                        new
                        {
                            Id = new Guid("6a575606-ee44-4e58-a0af-df2ada76995a"),
                            ShipType = 4,
                            Size = 5
                        },
                        new
                        {
                            Id = new Guid("1a1c2421-cf85-4cab-b79b-ee468e34a14b"),
                            ShipType = 1,
                            Size = 3
                        },
                        new
                        {
                            Id = new Guid("d5c75971-d3c6-46a7-933f-765d39c97f47"),
                            ShipType = 2,
                            Size = 2
                        },
                        new
                        {
                            Id = new Guid("2b413181-cd25-46c4-8ddd-c41a84faafdb"),
                            ShipType = 3,
                            Size = 2
                        });
                });

            modelBuilder.Entity("HiddenBattleship.PL.Entities.tblChatHistory", b =>
                {
                    b.HasOne("HiddenBattleship.PL.Entities.tblGame", "Game")
                        .WithMany("tblChatHistories")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiddenBattleship.PL.Entities.tblPlayer", "Player")
                        .WithMany("tblChatHistories")
                        .HasForeignKey("Receiver")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("HiddenBattleship.PL.Entities.tblGame", b =>
                {
                    b.HasOne("HiddenBattleship.PL.Entities.tblPlayer", "Player")
                        .WithMany("tblGames")
                        .HasForeignKey("LoserId");

                    b.HasOne("HiddenBattleship.PL.Entities.tblChatHistory", null)
                        .WithMany("tblGames")
                        .HasForeignKey("tblChatHistoryId");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("HiddenBattleship.PL.Entities.tblGameMove", b =>
                {
                    b.HasOne("HiddenBattleship.PL.Entities.tblGame", "Game")
                        .WithMany("tblGameMoves")
                        .HasForeignKey("GameId")
                        .IsRequired();

                    b.HasOne("HiddenBattleship.PL.Entities.tblPlayer", "Player")
                        .WithMany("tblGameMoves")
                        .HasForeignKey("PlayerId")
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("HiddenBattleship.PL.Entities.tblChatHistory", b =>
                {
                    b.Navigation("tblGames");
                });

            modelBuilder.Entity("HiddenBattleship.PL.Entities.tblGame", b =>
                {
                    b.Navigation("tblChatHistories");

                    b.Navigation("tblGameMoves");
                });

            modelBuilder.Entity("HiddenBattleship.PL.Entities.tblPlayer", b =>
                {
                    b.Navigation("tblChatHistories");

                    b.Navigation("tblGameMoves");

                    b.Navigation("tblGames");
                });
#pragma warning restore 612, 618
        }
    }
}
